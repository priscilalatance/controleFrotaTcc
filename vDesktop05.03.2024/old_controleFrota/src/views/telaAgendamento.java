/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import config.Agenda;
import config.AgendaDao;
import config.Conectar;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author maria
 */
public class telaAgendamento extends javax.swing.JFrame {

    //Criando a conexão com o banco
    Conectar con = new Conectar();
    Connection cn = con.conexao();
    DateTimeFormatter formatoEntradaBrasileiro = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    public telaAgendamento() {
        this.con = new Conectar();
        initComponents();
        popularJComboBoxPlaca();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jdcConsultaDataPorHorarioBox = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblConsHorarioBox = new javax.swing.JTable();
        cboPlacaAgendamento = new javax.swing.JComboBox<>();
        jdcDataAgendamento = new com.toedter.calendar.JDateChooser();
        cboHorario = new javax.swing.JComboBox<>();
        cboBox = new javax.swing.JComboBox<>();
        btnConsultarHorBox = new javax.swing.JButton();
        btnLimparConsultaHorBox = new javax.swing.JButton();
        btnConsultarAgenda = new javax.swing.JButton();
        btnExcluirAgenda = new javax.swing.JButton();
        btnLimparAgenda = new javax.swing.JButton();
        cboPlacaConsulta = new javax.swing.JComboBox<>();
        btnConsultarAgendamento = new javax.swing.JButton();
        btnLimparAgendamento = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblConsAgendamento = new javax.swing.JTable();
        lblConsultarHorarioBox = new javax.swing.JLabel();
        pnlConsultarHorBoxDisp = new javax.swing.JPanel();
        lblConsultarAgendamento = new javax.swing.JLabel();
        pnlConsultarAgendamento = new javax.swing.JPanel();
        pnlAgendarVeiculo = new javax.swing.JPanel();
        lblAgendarVeiculo = new javax.swing.JLabel();
        telaConsultarAgenda = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Abraão Lemos LTDA");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jdcConsultaDataPorHorarioBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jdcConsultaDataPorHorarioBox.setMinSelectableDate(new java.util.Date(-62135755085000L));
        jdcConsultaDataPorHorarioBox.setMinimumSize(new java.awt.Dimension(23, 24));
        jdcConsultaDataPorHorarioBox.setNextFocusableComponent(jdcConsultaDataPorHorarioBox);
        jPanel1.add(jdcConsultaDataPorHorarioBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 120, 270, 40));

        tblConsHorarioBox.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "HORÁRIO", "BOX"
            }
        ));
        tblConsHorarioBox.setRowHeight(28);
        jScrollPane2.setViewportView(tblConsHorarioBox);
        if (tblConsHorarioBox.getColumnModel().getColumnCount() > 0) {
            tblConsHorarioBox.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblConsHorarioBox.getColumnModel().getColumn(1).setPreferredWidth(150);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 240, 440, 160));

        cboPlacaAgendamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboPlacaAgendamento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboPlacaAgendamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 140, 210, 40));

        jdcDataAgendamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jdcDataAgendamento.setMinimumSize(new java.awt.Dimension(23, 24));
        jPanel1.add(jdcDataAgendamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 210, 210, 40));

        cboHorario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboHorario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboHorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 140, 200, 40));

        cboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 210, 200, 40));

        btnConsultarHorBox.setContentAreaFilled(false);
        btnConsultarHorBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConsultarHorBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarHorBoxActionPerformed(evt);
            }
        });
        jPanel1.add(btnConsultarHorBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 120, 40, 30));

        btnLimparConsultaHorBox.setContentAreaFilled(false);
        btnLimparConsultaHorBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimparConsultaHorBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparConsultaHorBoxActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimparConsultaHorBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 120, 30, 30));

        btnConsultarAgenda.setContentAreaFilled(false);
        btnConsultarAgenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConsultarAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarAgendaActionPerformed(evt);
            }
        });
        jPanel1.add(btnConsultarAgenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 360, 40, 40));

        btnExcluirAgenda.setContentAreaFilled(false);
        btnExcluirAgenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluirAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirAgendaActionPerformed(evt);
            }
        });
        jPanel1.add(btnExcluirAgenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 360, 30, 40));

        btnLimparAgenda.setContentAreaFilled(false);
        btnLimparAgenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimparAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparAgendaActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimparAgenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 360, -1, 40));

        cboPlacaConsulta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboPlacaConsulta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboPlacaConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 540, 270, 40));

        btnConsultarAgendamento.setContentAreaFilled(false);
        btnConsultarAgendamento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConsultarAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarAgendamentoActionPerformed(evt);
            }
        });
        jPanel1.add(btnConsultarAgendamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 540, 40, 30));

        btnLimparAgendamento.setContentAreaFilled(false);
        btnLimparAgendamento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimparAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparAgendamentoActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimparAgendamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 540, 40, 30));

        btnVoltar.setContentAreaFilled(false);
        btnVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        jPanel1.add(btnVoltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 840, 150, 30));

        tblConsAgendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "DATA", "HORÁRIO", "BOX"
            }
        ));
        tblConsAgendamento.setRowHeight(28);
        jScrollPane1.setViewportView(tblConsAgendamento);
        if (tblConsAgendamento.getColumnModel().getColumnCount() > 0) {
            tblConsAgendamento.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblConsAgendamento.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblConsAgendamento.getColumnModel().getColumn(2).setPreferredWidth(150);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 660, 730, 130));

        lblConsultarHorarioBox.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jPanel1.add(lblConsultarHorarioBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, 420, 30));

        pnlConsultarHorBoxDisp.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout pnlConsultarHorBoxDispLayout = new javax.swing.GroupLayout(pnlConsultarHorBoxDisp);
        pnlConsultarHorBoxDisp.setLayout(pnlConsultarHorBoxDispLayout);
        pnlConsultarHorBoxDispLayout.setHorizontalGroup(
            pnlConsultarHorBoxDispLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );
        pnlConsultarHorBoxDispLayout.setVerticalGroup(
            pnlConsultarHorBoxDispLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        jPanel1.add(pnlConsultarHorBoxDisp, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 180, 440, 40));

        lblConsultarAgendamento.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jPanel1.add(lblConsultarAgendamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 600, 710, 30));

        pnlConsultarAgendamento.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout pnlConsultarAgendamentoLayout = new javax.swing.GroupLayout(pnlConsultarAgendamento);
        pnlConsultarAgendamento.setLayout(pnlConsultarAgendamentoLayout);
        pnlConsultarAgendamentoLayout.setHorizontalGroup(
            pnlConsultarAgendamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 726, Short.MAX_VALUE)
        );
        pnlConsultarAgendamentoLayout.setVerticalGroup(
            pnlConsultarAgendamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        jPanel1.add(pnlConsultarAgendamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 600, 730, 40));

        pnlAgendarVeiculo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblAgendarVeiculo.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N

        javax.swing.GroupLayout pnlAgendarVeiculoLayout = new javax.swing.GroupLayout(pnlAgendarVeiculo);
        pnlAgendarVeiculo.setLayout(pnlAgendarVeiculoLayout);
        pnlAgendarVeiculoLayout.setHorizontalGroup(
            pnlAgendarVeiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAgendarVeiculoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAgendarVeiculo, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlAgendarVeiculoLayout.setVerticalGroup(
            pnlAgendarVeiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAgendarVeiculoLayout.createSequentialGroup()
                .addComponent(lblAgendarVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        jPanel1.add(pnlAgendarVeiculo, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 290, 450, 40));

        telaConsultarAgenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/TelaConsultarAgenda.png"))); // NOI18N
        jPanel1.add(telaConsultarAgenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimparAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparAgendaActionPerformed
        jdcDataAgendamento.setDate(null);
        lblAgendarVeiculo.setText("");
    }//GEN-LAST:event_btnLimparAgendaActionPerformed

    private void btnLimparConsultaHorBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparConsultaHorBoxActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblConsHorarioBox.getModel();
        model.setRowCount(0);
        jdcConsultaDataPorHorarioBox.setDate(null);
        lblConsultarHorarioBox.setText("");
    }//GEN-LAST:event_btnLimparConsultaHorBoxActionPerformed

    private void btnConsultarAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarAgendamentoActionPerformed
        AgendaDao dao = new AgendaDao();


            List<Agenda> agendaEncontrada = dao.consultarPorAgendamentoPlaca(cboPlacaConsulta.getSelectedItem().toString());

            if (agendaEncontrada.isEmpty()) {
                limparAgendamento();
                lblConsultarAgendamento.setText("Não há horário agendado para esse veículo.");
            } else {
                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("Data");                
                model.addColumn("Horario");
                model.addColumn("Box");

                for (Agenda agenda : agendaEncontrada) {
                    model.addRow(new Object[]{
                        agenda.getData().format(formatoEntradaBrasileiro),
                        agenda.getHorario(),
                        agenda.getBox()
                    });
                }

                tblConsAgendamento.setModel(model);
                lblConsultarAgendamento.setText("");
            }
        
    }//GEN-LAST:event_btnConsultarAgendamentoActionPerformed

    private void btnLimparAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparAgendamentoActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblConsAgendamento.getModel();
        model.setRowCount(0);        
    }//GEN-LAST:event_btnLimparAgendamentoActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnConsultarHorBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarHorBoxActionPerformed
        AgendaDao dao = new AgendaDao();
        if (jdcConsultaDataPorHorarioBox.getDate() == null) {
            limpar();
            lblConsultarHorarioBox.setText("Campo de Data não pode ser vazio.");

        } else {
            LocalDate localDateInicio = jdcConsultaDataPorHorarioBox.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            List<Agenda> agendaEncontrada = dao.consultarPorHorarioBox(localDateInicio);

            if (agendaEncontrada.isEmpty()) {
                limpar();
                lblConsultarHorarioBox.setText("Nenhum horário disponível nesse dia.");
            } else {
                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("Horario");
                model.addColumn("Box");

                for (Agenda agenda : agendaEncontrada) {
                    model.addRow(new Object[]{
                        agenda.getHorario(),
                        agenda.getBox()
                    });
                }

                tblConsHorarioBox.setModel(model);
                lblConsultarHorarioBox.setText("");
            }
        }
    }//GEN-LAST:event_btnConsultarHorBoxActionPerformed

    private void btnConsultarAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarAgendaActionPerformed
        AgendaDao dao = new AgendaDao();
        Agenda agenda = new Agenda();

        LocalDate dataAtual = LocalDate.now();

        if (jdcDataAgendamento.getDate() == null) {

            lblAgendarVeiculo.setText("Campo de Data não pode ser vazio.");

        } else if ((jdcDataAgendamento.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate()).isBefore(dataAtual)) {

            lblAgendarVeiculo.setText("A data não pode ser anterior a hoje.");

        } else if (dao.noEqualsDiaHorarioDisponivel(jdcDataAgendamento.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(), cboHorario.getSelectedItem().toString(),
                (Integer.parseInt(cboBox.getSelectedItem().toString()))) == 0) {

            //Se a vaga não estiver disponivel ou não tiver agenda nesse dia vai dar esse erro.
            lblAgendarVeiculo.setText("Não é possível agendar nessa data e horário.");

        } else {

            LocalDate localDate = jdcDataAgendamento.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            agenda.setData(localDate);
            agenda.setHorario(cboHorario.getSelectedItem().toString());
            agenda.setBox(Integer.parseInt(cboBox.getSelectedItem().toString()));
            agenda.setPlaca(cboPlacaAgendamento.getSelectedItem().toString());

            boolean status = dao.agendarVeiculo(agenda);
            if (status) {
                lblAgendarVeiculo.setText("Veículo foi agendado com sucesso!");
            } else {
                lblAgendarVeiculo.setText("Veículo não foi agendado.");
            }
        }
    }//GEN-LAST:event_btnConsultarAgendaActionPerformed

    private void btnExcluirAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirAgendaActionPerformed
        //Exclui o veiculo agendado
        AgendaDao dao = new AgendaDao();
        Agenda agenda = new Agenda();

        LocalDate dataAtual = LocalDate.now();

        if (jdcDataAgendamento.getDate() == null) {

            lblAgendarVeiculo.setText("Campo de Data não pode ser vazio.");

        } else if ((jdcDataAgendamento.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate()).isBefore(dataAtual)) {

            lblAgendarVeiculo.setText("A data não pode ser anterior a hoje.");

        } else if (dao.noEqualsAgendado(jdcDataAgendamento.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(), cboHorario.getSelectedItem().toString(),
                cboPlacaAgendamento.getSelectedItem().toString(),
                (Integer.parseInt(cboBox.getSelectedItem().toString()))) == 0) {

            //Se não for igual ao banco vai dar erro
            lblAgendarVeiculo.setText("Tente novamente com os dados corretos.");

        } else {

            LocalDate localDate = jdcDataAgendamento.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            agenda.setData(localDate);
            agenda.setHorario(cboHorario.getSelectedItem().toString());
            agenda.setBox(Integer.parseInt(cboBox.getSelectedItem().toString()));
            agenda.setPlaca(cboPlacaAgendamento.getSelectedItem().toString());

            boolean status = dao.CancelarVeiculo(agenda);
            if (status) {
                lblAgendarVeiculo.setText("O agendamento foi cancelado com sucesso.");
            } else {
                lblAgendarVeiculo.setText("Não foi possivel fazer o cancelamento.");
            }

        }


    }//GEN-LAST:event_btnExcluirAgendaActionPerformed

    public void limpar() {
        DefaultTableModel model = (DefaultTableModel) tblConsHorarioBox.getModel();
        model.setRowCount(0);
    }
    public void limparAgendamento() {
        DefaultTableModel model = (DefaultTableModel) tblConsAgendamento.getModel();
        model.setRowCount(0);
    }
    private void popularJComboBoxPlaca() {
        try {

            String sqlModelo = "SELECT * FROM veiculo";
            Statement stModelo = cn.createStatement();
            ResultSet rsModelo = stModelo.executeQuery(sqlModelo);
            while (rsModelo.next()) {
                cboPlacaAgendamento.addItem(rsModelo.getString("placa"));
                cboPlacaConsulta.addItem(rsModelo.getString("placa"));
            }
            String[] horarioEncontrado = {"08:00", "11:00", "14:00"};
            for (String horario : horarioEncontrado) {
                cboHorario.addItem(horario);
            }

            Integer[] boxEncontrado = {1, 2, 3, 4, 5};
            for (Integer box : boxEncontrado) {
                cboBox.addItem(box.toString());
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaAgendamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultarAgenda;
    private javax.swing.JButton btnConsultarAgendamento;
    private javax.swing.JButton btnConsultarHorBox;
    private javax.swing.JButton btnExcluirAgenda;
    private javax.swing.JButton btnLimparAgenda;
    private javax.swing.JButton btnLimparAgendamento;
    private javax.swing.JButton btnLimparConsultaHorBox;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cboBox;
    private javax.swing.JComboBox<String> cboHorario;
    private javax.swing.JComboBox<String> cboPlacaAgendamento;
    private javax.swing.JComboBox<String> cboPlacaConsulta;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jdcConsultaDataPorHorarioBox;
    private com.toedter.calendar.JDateChooser jdcDataAgendamento;
    private javax.swing.JLabel lblAgendarVeiculo;
    private javax.swing.JLabel lblConsultarAgendamento;
    private javax.swing.JLabel lblConsultarHorarioBox;
    private javax.swing.JPanel pnlAgendarVeiculo;
    private javax.swing.JPanel pnlConsultarAgendamento;
    private javax.swing.JPanel pnlConsultarHorBoxDisp;
    private javax.swing.JTable tblConsAgendamento;
    private javax.swing.JTable tblConsHorarioBox;
    private javax.swing.JLabel telaConsultarAgenda;
    // End of variables declaration//GEN-END:variables

}
