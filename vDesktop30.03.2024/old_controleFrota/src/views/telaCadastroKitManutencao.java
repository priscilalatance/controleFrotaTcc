package views;

import config.Conectar;
import config.PlanoItemManutencao;
import config.PlanoItemManutencaoDao;
import config.PlanoManutencao;
import config.PlanoManutencaoDao;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author maria
 */
public class telaCadastroKitManutencao extends javax.swing.JFrame {

    //Criando a conexão com o banco
    Conectar con = new Conectar();

    public telaCadastroKitManutencao() {
        this.con = new Conectar();
        initComponents();
        popularJComboBoxCadastrarKit();
        popularJComboBoxCadastrarItemAoKit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cboMarcaKit = new javax.swing.JComboBox<>();
        cboModeloKit = new javax.swing.JComboBox<>();
        cboMotorKit = new javax.swing.JComboBox<>();
        cboKmManutKit = new javax.swing.JComboBox<>();
        cboAnoModKit = new javax.swing.JComboBox<>();
        cboAnoFabriKit = new javax.swing.JComboBox<>();
        txtCodItemPlano = new app.bolivia.swing.JCTextField();
        cboModeloPlano = new javax.swing.JComboBox<>();
        cboMotorPlano = new javax.swing.JComboBox<>();
        cboKmManutPlano = new javax.swing.JComboBox<>();
        cboAnoModPlano = new javax.swing.JComboBox<>();
        cboAnoFabriPlano = new javax.swing.JComboBox<>();
        btnIncluirKit = new javax.swing.JButton();
        btnAlterarKit = new javax.swing.JButton();
        btnIncluirPlano = new javax.swing.JButton();
        btnExcluirPlano = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        btnLimparCadasPlan = new javax.swing.JButton();
        btnLimparCadasProd = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblCadastrarPlan = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblCadastrarProd = new javax.swing.JLabel();
        telaCadastroKitManutencao = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Abraão Lemos LTDA");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cboMarcaKit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboMarcaKit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboMarcaKit, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, 230, 40));

        cboModeloKit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboModeloKit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboModeloKit, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 160, 240, 40));

        cboMotorKit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboMotorKit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboMotorKit, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 160, 230, 40));

        cboKmManutKit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboKmManutKit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboKmManutKit, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 240, 160, 40));

        cboAnoModKit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboAnoModKit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboAnoModKit, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 240, 150, 40));

        cboAnoFabriKit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboAnoFabriKit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboAnoFabriKit, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 240, 160, 40));

        txtCodItemPlano.setBorder(null);
        txtCodItemPlano.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtCodItemPlano.setOpaque(false);
        txtCodItemPlano.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        txtCodItemPlano.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodItemPlanoKeyReleased(evt);
            }
        });
        jPanel1.add(txtCodItemPlano, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 560, 210, 20));

        cboModeloPlano.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboModeloPlano.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboModeloPlano, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 550, 240, 40));

        cboMotorPlano.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboMotorPlano.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboMotorPlano, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 550, 220, 40));

        cboKmManutPlano.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboKmManutPlano.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboKmManutPlano, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 630, 160, 40));

        cboAnoModPlano.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboAnoModPlano.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboAnoModPlano, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 630, 150, 40));

        cboAnoFabriPlano.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboAnoFabriPlano.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cboAnoFabriPlano, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 630, 160, 40));

        btnIncluirKit.setContentAreaFilled(false);
        btnIncluirKit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIncluirKit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirKitActionPerformed(evt);
            }
        });
        jPanel1.add(btnIncluirKit, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 240, 40, 40));

        btnAlterarKit.setContentAreaFilled(false);
        btnAlterarKit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterarKit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarKitActionPerformed(evt);
            }
        });
        jPanel1.add(btnAlterarKit, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 240, 40, 40));

        btnIncluirPlano.setContentAreaFilled(false);
        btnIncluirPlano.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIncluirPlano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirPlanoActionPerformed(evt);
            }
        });
        jPanel1.add(btnIncluirPlano, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 620, 50, 50));

        btnExcluirPlano.setContentAreaFilled(false);
        btnExcluirPlano.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluirPlano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirPlanoActionPerformed(evt);
            }
        });
        jPanel1.add(btnExcluirPlano, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 620, 50, 50));

        btnVoltar.setContentAreaFilled(false);
        btnVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        jPanel1.add(btnVoltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 830, 150, 30));

        btnLimparCadasPlan.setContentAreaFilled(false);
        btnLimparCadasPlan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimparCadasPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCadasPlanActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimparCadasPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 240, 40, 40));

        btnLimparCadasProd.setContentAreaFilled(false);
        btnLimparCadasProd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimparCadasProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCadasProdActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimparCadasProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 620, 40, 50));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadastrarPlan, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lblCadastrarPlan, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 760, 40));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadastrarProd, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(lblCadastrarProd, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 710, 760, 40));

        telaCadastroKitManutencao.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        telaCadastroKitManutencao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/TelaCadastroKitManutencao.png"))); // NOI18N
        jPanel1.add(telaCadastroKitManutencao, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodItemPlanoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodItemPlanoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodItemPlanoKeyReleased

    void limparCampos() {
        txtCodItemPlano.setText("");
    }
    private void btnIncluirKitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirKitActionPerformed
        // TODO add your handling code here:
        PlanoManutencaoDao dao = new PlanoManutencaoDao();

        if (dao.NoEqualsVeiculo(cboMarcaKit.getSelectedItem().toString(), cboModeloKit.getSelectedItem().toString(),
                cboMotorKit.getSelectedItem().toString(), (Integer.parseInt(cboAnoModKit.getSelectedItem().toString())),
                (Integer.parseInt(cboAnoFabriKit.getSelectedItem().toString()))) == 0) {

            lblCadastrarPlan.setText("Não existe veiculo cadastrado, devido a isso não é possivel cadastrar um plano de manutenção associado.");

        } else if (dao.equalsKit(cboMarcaKit.getSelectedItem().toString(), cboModeloKit.getSelectedItem().toString(),
                cboMotorKit.getSelectedItem().toString(), (Integer.parseInt(cboKmManutKit.getSelectedItem().toString())),
                (Integer.parseInt(cboAnoModKit.getSelectedItem().toString())), (Integer.parseInt(cboAnoFabriKit.getSelectedItem().toString()))) == 1) {
            lblCadastrarPlan.setText("Já existe esse plano de manutenção cadastrado.");
        } else {

            int resp;

            PlanoManutencao plano = new PlanoManutencao();
            plano.setMarca(cboMarcaKit.getSelectedItem().toString());
            plano.setModelo(cboModeloKit.getSelectedItem().toString());
            plano.setMotor(cboMotorKit.getSelectedItem().toString());
            plano.setKmManutencao(Integer.parseInt(cboKmManutKit.getSelectedItem().toString()));
            plano.setAnoModelo(Integer.parseInt(cboAnoModKit.getSelectedItem().toString()));
            plano.setAnoFabricacao(Integer.parseInt(cboAnoFabriKit.getSelectedItem().toString()));

            resp = dao.incluirKit(plano);
            if (resp == 1) {
                lblCadastrarPlan.setText("Dados inseridos com sucesso!!!");
            } else if (resp == 1062) {
                lblCadastrarPlan.setText("Plano de manutenção já cadastrado");

            } else {
                lblCadastrarPlan.setText("Erro ao salvar!!!");
            }
        }
    }//GEN-LAST:event_btnIncluirKitActionPerformed

    private void btnAlterarKitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarKitActionPerformed

        PlanoManutencaoDao dao = new PlanoManutencaoDao();
        if (dao.NoEqualsVeiculo(cboMarcaKit.getSelectedItem().toString(), cboModeloKit.getSelectedItem().toString(),
                cboMotorKit.getSelectedItem().toString(), (Integer.parseInt(cboAnoModKit.getSelectedItem().toString())),
                (Integer.parseInt(cboAnoFabriKit.getSelectedItem().toString()))) == 0) {

            lblCadastrarPlan.setText("Não existe veiculo cadastrado para esse plano de manutenção.");

        } else {

            PlanoManutencao plano = new PlanoManutencao();
            plano.setMarca(cboMarcaKit.getSelectedItem().toString());
            plano.setModelo(cboModeloKit.getSelectedItem().toString());
            plano.setMotor(cboMotorKit.getSelectedItem().toString());
            plano.setKmManutencao(Integer.parseInt(cboKmManutKit.getSelectedItem().toString()));
            plano.setAnoModelo(Integer.parseInt(cboAnoModKit.getSelectedItem().toString()));
            plano.setAnoFabricacao(Integer.parseInt(cboAnoFabriKit.getSelectedItem().toString()));

            boolean status = dao.alterar(plano);
            if (status) {
                lblCadastrarPlan.setText("Plano de manutenção Alterado com sucesso");
            } else {
                lblCadastrarPlan.setText("Plano de manutenção não foi alterado");
            }
        }
    }//GEN-LAST:event_btnAlterarKitActionPerformed

    private void btnIncluirPlanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirPlanoActionPerformed
        int resp;
        PlanoItemManutencaoDao dao = new PlanoItemManutencaoDao();

        if (txtCodItemPlano.getText().isEmpty()) {

            lblCadastrarProd.setText("Está vazio o código do produto.");

        } else if (dao.NoEqualsVeiculoItem(cboModeloPlano.getSelectedItem().toString(), cboMotorPlano.getSelectedItem().toString(),
                 (Integer.parseInt(cboAnoModPlano.getSelectedItem().toString())),
                (Integer.parseInt(cboAnoFabriPlano.getSelectedItem().toString()))) == 0) {

            lblCadastrarProd.setText("Não existe veiculo cadastrado para esse plano de manutenção.");

        } else if (dao.NoEqualsKitItem(cboModeloPlano.getSelectedItem().toString(), cboMotorPlano.getSelectedItem().toString(),
                (Integer.parseInt(cboKmManutPlano.getSelectedItem().toString())), (Integer.parseInt(cboAnoModPlano.getSelectedItem().toString())),
                (Integer.parseInt(cboAnoFabriPlano.getSelectedItem().toString()))) == 0) {
            lblCadastrarProd.setText("Não existe esse plano de manutenção cadastrado, então não é possivel incluir produtos.");
        } else {

            PlanoItemManutencao plano = new PlanoItemManutencao();
            plano.setIdCodigo(Integer.parseInt(txtCodItemPlano.getText()));
            plano.setModelo(cboModeloPlano.getSelectedItem().toString());
            plano.setMotor(cboMotorPlano.getSelectedItem().toString());
            plano.setKmManutencao(Integer.parseInt(cboKmManutPlano.getSelectedItem().toString()));
            plano.setAnoModelo(Integer.parseInt(cboAnoModPlano.getSelectedItem().toString()));
            plano.setAnoFabricacao(Integer.parseInt(cboAnoFabriPlano.getSelectedItem().toString()));

            resp = dao.incluirItemAoKit(plano);
            if (resp == 1) {
                lblCadastrarProd.setText("Dados inseridos com sucesso!!!");
            } else if (resp == 1062) {
                lblCadastrarProd.setText("Produto já cadastrado.");

            } else {
                lblCadastrarProd.setText("Erro ao salvar!!!");
            }

        }
    }//GEN-LAST:event_btnIncluirPlanoActionPerformed

    private void btnExcluirPlanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirPlanoActionPerformed
        PlanoItemManutencaoDao dao = new PlanoItemManutencaoDao();

        String modelo = cboModeloPlano.getSelectedItem().toString();
        String motor = cboMotorPlano.getSelectedItem().toString();
        Integer km = (Integer.parseInt(cboKmManutPlano.getSelectedItem().toString()));
        Integer anoModelo = (Integer.parseInt(cboAnoModPlano.getSelectedItem().toString()));
        Integer anoFabricacao = (Integer.parseInt(cboAnoFabriPlano.getSelectedItem().toString()));

        if (txtCodItemPlano.getText().isEmpty()) {
            lblCadastrarProd.setText("Código Do Produto vazio.");
        } else {
            Integer idCodigo = (Integer.parseInt(txtCodItemPlano.getText()));
            Boolean status = dao.excluir(modelo, motor, km, anoModelo, anoFabricacao, idCodigo);
            limparCampos();
            if (status == true) {
                lblCadastrarProd.setText("Produto excluído com sucesso do plano!!!");
            } else {
                lblCadastrarProd.setText("Erro ao tentar excluir o produto do plano.");
            }

        }

    }//GEN-LAST:event_btnExcluirPlanoActionPerformed

    private void btnLimparCadasPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCadasPlanActionPerformed
        lblCadastrarPlan.setText("");
    }//GEN-LAST:event_btnLimparCadasPlanActionPerformed

    private void btnLimparCadasProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCadasProdActionPerformed
        lblCadastrarProd.setText("");
    }//GEN-LAST:event_btnLimparCadasProdActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        new telaInicial().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    public void popularJComboBoxCadastrarKit() {
        Connection cn = con.conexao();
        try {

            String sqlMarca = "SELECT DISTINCT marca FROM veiculo ORDER BY marca ASC";
            Statement stMarca = cn.createStatement();
            ResultSet rsMarca = stMarca.executeQuery(sqlMarca);
            while (rsMarca.next()) {
                cboMarcaKit.addItem(rsMarca.getString("marca"));
            }

            String sqlModelo = "SELECT DISTINCT modelo FROM veiculo ORDER BY modelo ASC";
            Statement stModelo = cn.createStatement();
            ResultSet rsModelo = stModelo.executeQuery(sqlModelo);
            while (rsModelo.next()) {
                cboModeloKit.addItem(rsModelo.getString("modelo"));
            }

            String sqlMotor = "SELECT DISTINCT motor FROM veiculo ORDER BY motor ASC";
            Statement stMotor = cn.createStatement();
            ResultSet rsMotor = stMotor.executeQuery(sqlMotor);
            while (rsMotor.next()) {
                cboMotorKit.addItem(rsMotor.getString("motor"));
            }

            String sqlAnoModelo = "SELECT DISTINCT anoModelo FROM veiculo ORDER BY anoModelo ASC";
            Statement stAnoModelo = cn.createStatement();
            ResultSet rsAnoModelo = stAnoModelo.executeQuery(sqlAnoModelo);
            while (rsAnoModelo.next()) {
                cboAnoModKit.addItem(rsAnoModelo.getString("anoModelo"));
            }

            String sqlAnoFabricacao = "SELECT DISTINCT anoFabricacao FROM veiculo ORDER BY anoFabricacao ASC";
            Statement stAnoFabricacao = cn.createStatement();
            ResultSet rsAnoFabricacao = stAnoFabricacao.executeQuery(sqlAnoFabricacao);
            while (rsAnoFabricacao.next()) {
                cboAnoFabriKit.addItem(rsAnoFabricacao.getString("anoFabricacao"));
            }

            Integer[] kmManutencao = {10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000};
            for (Integer km : kmManutencao) {
                cboKmManutKit.addItem(km.toString());
            }
            con.desconectar(cn);
        } catch (SQLException ex) {
            lblCadastrarPlan.setText("");
        }

    }

    public void popularJComboBoxCadastrarItemAoKit() {
        Connection cn = con.conexao();
        try {

            String sqlModelo = "SELECT DISTINCT modelo FROM veiculo ORDER BY modelo ASC";
            Statement stModelo = cn.createStatement();
            ResultSet rsModelo = stModelo.executeQuery(sqlModelo);
            while (rsModelo.next()) {
                cboModeloPlano.addItem(rsModelo.getString("modelo"));
            }

            String sqlMotor = "SELECT DISTINCT motor FROM veiculo ORDER BY motor ASC";
            Statement stMotor = cn.createStatement();
            ResultSet rsMotor = stMotor.executeQuery(sqlMotor);
            while (rsMotor.next()) {
                cboMotorPlano.addItem(rsMotor.getString("motor"));
            }

            String sqlAnoModelo = "SELECT DISTINCT anoModelo FROM veiculo ORDER BY anoModelo ASC";
            Statement stAnoModelo = cn.createStatement();
            ResultSet rsAnoModelo = stAnoModelo.executeQuery(sqlAnoModelo);
            while (rsAnoModelo.next()) {
                cboAnoModPlano.addItem(rsAnoModelo.getString("anoModelo"));
            }

            String sqlAnoFabricacao = "SELECT DISTINCT anoFabricacao FROM veiculo ORDER BY anoFabricacao ASC";
            Statement stAnoFabricacao = cn.createStatement();
            ResultSet rsAnoFabricacao = stAnoFabricacao.executeQuery(sqlAnoFabricacao);
            while (rsAnoFabricacao.next()) {
                cboAnoFabriPlano.addItem(rsAnoFabricacao.getString("anoFabricacao"));
            }

            Integer[] kmManutencao = {10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000};
            for (Integer km : kmManutencao) {
                cboKmManutPlano.addItem(km.toString());
            }
            con.desconectar(cn);
        } catch (SQLException ex) {
            lblCadastrarProd.setText("Erro de banco.");
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaCadastroKitManutencao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaCadastroKitManutencao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaCadastroKitManutencao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaCadastroKitManutencao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaCadastroKitManutencao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarKit;
    private javax.swing.JButton btnExcluirPlano;
    private javax.swing.JButton btnIncluirKit;
    private javax.swing.JButton btnIncluirPlano;
    private javax.swing.JButton btnLimparCadasPlan;
    private javax.swing.JButton btnLimparCadasProd;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cboAnoFabriKit;
    private javax.swing.JComboBox<String> cboAnoFabriPlano;
    private javax.swing.JComboBox<String> cboAnoModKit;
    private javax.swing.JComboBox<String> cboAnoModPlano;
    private javax.swing.JComboBox<String> cboKmManutKit;
    private javax.swing.JComboBox<String> cboKmManutPlano;
    private javax.swing.JComboBox<String> cboMarcaKit;
    private javax.swing.JComboBox<String> cboModeloKit;
    private javax.swing.JComboBox<String> cboModeloPlano;
    private javax.swing.JComboBox<String> cboMotorKit;
    private javax.swing.JComboBox<String> cboMotorPlano;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblCadastrarPlan;
    private javax.swing.JLabel lblCadastrarProd;
    private javax.swing.JLabel telaCadastroKitManutencao;
    private app.bolivia.swing.JCTextField txtCodItemPlano;
    // End of variables declaration//GEN-END:variables
}
